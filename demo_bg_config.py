"""
Ejemplo de c√≥mo cambiar la configuraci√≥n del removedor de fondos.
Demuestra diferentes formas de configurar qu√© implementaci√≥n usar.
"""

from bg_remover_config import BackgroundRemoverConfig
from src.background_remover_factory import BackgroundRemoverFactory

def demo_configuration_options():
    """Demuestra diferentes opciones de configuraci√≥n."""
    
    print("‚öôÔ∏è Configuraci√≥n del Removedor de Fondos")
    print("=" * 50)
    
    # Mostrar configuraci√≥n actual
    print("üìã Configuraci√≥n actual:")
    BackgroundRemoverConfig.print_current_config()
    
    # Mostrar presets disponibles
    print(f"\nüé® Presets disponibles:")
    presets = BackgroundRemoverConfig.get_available_presets()
    for i, preset in enumerate(presets, 1):
        config = BackgroundRemoverConfig.PRESETS[preset]
        print(f"  {i}. {preset}:")
        for key, value in config.items():
            print(f"     {key}: {value}")
        print()

def demo_change_to_tutanchacon():
    """Demuestra c√≥mo cambiar a TutanchaconBgRemover."""
    
    print("üé® Cambiando a TutanchaconBgRemover")
    print("-" * 40)
    
    # Cambiar tipo de removedor
    BackgroundRemoverConfig.REMOVER_TYPE = 'tutanchacon'
    
    # Cambiar preset
    BackgroundRemoverConfig.set_preset('avatar_calidad_maxima')
    
    print("‚úÖ Configuraci√≥n actualizada:")
    BackgroundRemoverConfig.print_current_config()
    
    # Crear removedor con nueva configuraci√≥n
    try:
        config = BackgroundRemoverConfig.get_tutanchacon_config()
        bg_remover = BackgroundRemoverFactory.create_remover(
            remover_type='tutanchacon',
            **config
        )
        print(f"‚úÖ Removedor creado: {bg_remover}")
        return bg_remover
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return None

def demo_change_to_api():
    """Demuestra c√≥mo cambiar a RemoveBgService (API)."""
    
    print("\nüåê Cambiando a RemoveBgService (API)")
    print("-" * 40)
    
    # Cambiar tipo de removedor
    BackgroundRemoverConfig.REMOVER_TYPE = 'api'
    
    print("‚úÖ Configuraci√≥n actualizada:")
    BackgroundRemoverConfig.print_current_config()
    
    # Crear removedor con nueva configuraci√≥n (simulado)
    try:
        # En uso real, necesitar√≠as: api_key = Config.get_remove_bg_api_key()
        api_key = "tu_api_key_aqui"
        
        if api_key != "tu_api_key_aqui":
            bg_remover = BackgroundRemoverFactory.create_remover(
                remover_type='api',
                api_key=api_key
            )
            print(f"‚úÖ Removedor API creado")
            return bg_remover
        else:
            print("‚ö†Ô∏è API key no configurada (esto es normal en el demo)")
            return None
            
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return None

def demo_custom_configuration():
    """Demuestra configuraci√≥n personalizada."""
    
    print("\nüîß Configuraci√≥n personalizada")
    print("-" * 35)
    
    # Configuraci√≥n manual (sin preset)
    BackgroundRemoverConfig.REMOVER_TYPE = 'tutanchacon'
    BackgroundRemoverConfig.ACTIVE_PRESET = None  # Usar configuraci√≥n manual
    BackgroundRemoverConfig.TUTANCHACON_MODEL = 'u2net'
    BackgroundRemoverConfig.TUTANCHACON_ALPHA_THRESHOLD = 30
    BackgroundRemoverConfig.TUTANCHACON_PRESERVE_ELEMENTS = False
    BackgroundRemoverConfig.TUTANCHACON_SMOOTH_EDGES = False
    
    print("‚úÖ Configuraci√≥n personalizada:")
    BackgroundRemoverConfig.print_current_config()
    
    try:
        config = BackgroundRemoverConfig.get_tutanchacon_config()
        bg_remover = BackgroundRemoverFactory.create_remover(
            remover_type='tutanchacon',
            **config
        )
        print(f"‚úÖ Removedor personalizado: {bg_remover}")
        return bg_remover
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return None

def demo_quick_preset_changes():
    """Demuestra cambios r√°pidos de presets."""
    
    print("\n‚ö° Cambios r√°pidos de preset")
    print("-" * 35)
    
    # Probar diferentes presets
    test_presets = ['avatar_equilibrado', 'procesamiento_rapido', 'avatar_complejo']
    
    for preset in test_presets:
        print(f"\nüéØ Probando preset: {preset}")
        try:
            BackgroundRemoverConfig.set_preset(preset)
            config = BackgroundRemoverConfig.get_tutanchacon_config()
            
            bg_remover = BackgroundRemoverFactory.create_remover(
                remover_type='tutanchacon',
                **config
            )
            print(f"‚úÖ {preset}: {bg_remover}")
            
        except Exception as e:
            print(f"‚ùå Error con {preset}: {e}")

def show_usage_instructions():
    """Muestra instrucciones de uso."""
    
    print("\nüí° C√≥mo cambiar la configuraci√≥n:")
    print("=" * 45)
    
    print("1Ô∏è‚É£ Editar bg_remover_config.py:")
    print("   - Cambiar REMOVER_TYPE = 'tutanchacon' o 'api'")
    print("   - Cambiar ACTIVE_PRESET para usar presets")
    print("   - O configurar manualmente los par√°metros")
    print()
    
    print("2Ô∏è‚É£ Usar presets predefinidos:")
    print("   - 'avatar_calidad_maxima': M√°xima calidad")
    print("   - 'avatar_equilibrado': Recomendado general")
    print("   - 'procesamiento_rapido': Para velocidad")
    print("   - 'avatar_complejo': Para avatares detallados")
    print()
    
    print("3Ô∏è‚É£ Program√°ticamente:")
    print("   BackgroundRemoverConfig.REMOVER_TYPE = 'tutanchacon'")
    print("   BackgroundRemoverConfig.set_preset('avatar_calidad_maxima')")
    print()
    
    print("4Ô∏è‚É£ Los archivos resize_images.py y remove_bg.py")
    print("   usar√°n autom√°ticamente la configuraci√≥n elegida.")

def main():
    """Funci√≥n principal del demo."""
    
    # Configuraci√≥n inicial
    demo_configuration_options()
    
    # Cambiar a diferentes opciones
    demo_change_to_tutanchacon()
    demo_change_to_api()
    demo_custom_configuration()
    demo_quick_preset_changes()
    
    # Instrucciones
    show_usage_instructions()
    
    print("\nüéâ Demo completado!")
    print("üîß Edita bg_remover_config.py para cambiar la configuraci√≥n")

if __name__ == "__main__":
    main()
